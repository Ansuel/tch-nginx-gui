local mapper = mapper
local config_parental = "parental"
local str_char = string.char

-- uci.parental
mapper("uci_1to1").registerConfigMap(config_parental)

-- uci.parental.general
local parental_general = {
  config = config_parental,
  section = "general",
  options = { "enable", "exclude", "ipv6_enable","blocked_page_redirect","redirect_mark_value","accept_mark_value","mark_mask_value","keywordfilter_enable" }
}

local uci_parental_general = mapper("uci_1to1").createSimpleMap(parental_general)
register(uci_parental_general)

-- uci.parental.URLfilter
local parental_URLfilter = {
  config = config_parental,
  type = "URLfilter",
  options = { "site", "device", "mac", "action", "blocked_page_redirect", "captive_portal_redirect", "one_time_redirect" }
}
mapper("uci_1to1").registerNamedMultiMap(parental_URLfilter)
-- uci.parental.filterkeyword
local parental_filterkeyword = {
  config = config_parental,
  type = "filterkeyword",
  options = { "keyword" }
}
local uci_parental_filterkeyword = mapper("uci_1to1").createNamedMultiMap(parental_filterkeyword)
local original_set = uci_parental_filterkeyword.set
uci_parental_filterkeyword.set = function(mapping, paramname, paramvalue, ...)
  if paramname == "keyword" then
    local code_keywords={}
    for j=1,#paramvalue,1 do
      code_keywords[#code_keywords+1]=string.format("%x",string.byte(paramvalue,j))
    end
    local values= table.concat(code_keywords," ")
    return original_set(mapping, paramname, values, ...)
  end
  return original_set(mapping, paramname, paramvalue, ...)
end
local original_get = uci_parental_filterkeyword.get
uci_parental_filterkeyword.get = function(mapping, paramname,key, ...)
  local value = original_get(mapping, paramname,key, ...)
  if paramname == "keyword" then
    local str_keyword = {}
    for _ch in string.gmatch(value,"%S+") do
      str_keyword[#str_keyword+1] = str_char(tonumber("0x".._ch))
    end
    if #str_keyword > 0 then
      value=table.concat(str_keyword, "")
    end
  end
  return value
end

local orig_getall = uci_parental_filterkeyword.getall
uci_parental_filterkeyword.getall = function(mapping, key, ...)
  local values = orig_getall(mapping, key, ...)
end
register(uci_parental_filterkeyword)
