local mapper = mapper
local config_env = "env"

-- uci.env
mapper("uci_1to1").registerConfigMap(config_env)

-- uci.env.var.{i}
local env_envvars = {
    config = config_env,
    section = "var",
    type = "envvars",
    options = {
        "company_name", "prod_friendly_name", "prod_name", "prod_number", "prod_description",
        "hardware_version", "serial", "friendly_sw_version_activebank", "commonssid_suffix",
        "friendly_sw_version_passivebank", "ssid_prefix", "oui", "banksize", "provisioning_code",
        "bootloader_version", "bootloader_oid", "qtn_eth_mac", "local_eth_mac", "local_wifi_mac",
        "ssid_mac_postfix_r0", "ssid_mac_postfix_r1", "variant_friendly_name", "_provisioning_code",
        "embedded_mobile", "vendor_config", "vendor_log","landing_page","logfilter", "ppp_realm_ipv6", "ppp_realm_ipv4",
        "default_key_r0_s0", "default_wep_key_r0_s0", "default_wps_ap_pin_r0_s0",
        "default_key_r0_s1", "default_wep_key_r0_s1", "default_wps_ap_pin_r0_s1",
        "default_key_r0_s2", "default_wep_key_r0_s2", "default_wps_ap_pin_r0_s2",
        "default_key_r0_s3", "default_wep_key_r0_s3", "default_wps_ap_pin_r0_s3",
        "default_key_r1_s0", "default_wep_key_r1_s0", "default_wps_ap_pin_r1_s0",
        "default_key_r1_s1", "default_wep_key_r1_s1", "default_wps_ap_pin_r1_s1",
        "default_key_r1_s2", "default_wep_key_r1_s2", "default_wps_ap_pin_r1_s2",
        "default_key_r1_s3", "default_wep_key_r1_s3", "default_wps_ap_pin_r1_s3",
        },
}

mapper("uci_1to1").registerSimpleMap(env_envvars)

-- uci.env.ripcontent.{i}
local env_ripcontent = {
    config = config_env,
    section = "rip",
    type = "ripcontent",
    options = {
        "eth_mac", "wifi_mac", "usb_mac", "chip_id", "variant_id", "pba_tocom", "fia", "factory_id", "last_repair_date",
        "company_id", "board_mnemonic", "factory_date", "product_id", "serial", "modem_access_code","sfp",
    }
}

mapper("uci_1to1").registerSimpleMap(env_ripcontent)

-- uci.env.custovar.{i}
local env_envcustovars = {
    config = config_env,
    section = "custovar",
    type = "envvars",
    options = {
        "wan_if",
    }
}

mapper("uci_1to1").registerSimpleMap(env_envcustovars)
