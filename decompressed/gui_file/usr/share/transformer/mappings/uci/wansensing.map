local mapper = mapper
local config_wansensing = "wansensing"

-- uci.wansensing
mapper("uci_1to1").registerConfigMap(config_wansensing)

-- uci.wansensing.global.
local wansensing_global  = {
    config = config_wansensing,
    section = "global",
    type = "wansensing",
    options = { "enable", "initmode", "l2type", "l3type", "tracelevel", "autofailover", "supervision_mode", "private_IP_mode" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_global)

-- uci.wansensing.eth.
local wansensing_eth = {
    config = config_wansensing,
    section = "eth",
    type = "iftype",
    options = { "enable" },
    lists = { "interface" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_eth)

-- uci.wansensing.ptm.
local wansensing_ptm = {
    config = config_wansensing,
    section = "ptm",
    type = "iftype",
    options = { "enable" },
    lists = { "interface" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_ptm)

-- uci.wansensing.atm.
local wansensing_atm = {
    config = config_wansensing,
    section = "atm",
    type = "iftype",
    options = { "enable" },
    lists = { "interface" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_atm)

-- uci.wansensing.L2State.
local wansensing_L2State  = {
    config = config_wansensing,
    section = "L2State",
    type = "L2State",
    options = { "name", "entryexits", "mains", "timeout" },
}
mapper("uci_1to1").registerNamedMultiMap(wansensing_L2State)

-- uci.wansensing.L3State.
local wansensing_L3State  = {
    config = config_wansensing,
    section = "L3State",
    type = "L3State",
    options = { "name", "entryexits", "mains", "timeout" },
}
mapper("uci_1to1").registerNamedMultiMap(wansensing_L3State)

-- uci.wansensing.worker.
local wansensing_worker  = {
    config = config_wansensing,
    section = "worker",
    type = "worker",
    options = { "enable", "name", "mains" },
}
mapper("uci_1to1").registerNamedMultiMap(wansensing_worker)

-- uci.wansensing.voip_mgmt.
local wansensing_voip_mgmt  = {
    config = config_wansensing,
    section = "voip_mgmt",
    type = "interface",
    options = { "classgroup", "upload", "enable"},
}
mapper("uci_1to1").registerSimpleMap(wansensing_voip_mgmt)

-- uci.wansensing.TO_VOIP_MGMT.
local wansensing_TO_VOIP_MGMT  = {
    config = config_wansensing,
    section = "TO_VOIP_MGMT",
    type = "classgroup",
    options = { "classes", "default", "policy"},
}
mapper("uci_1to1").registerSimpleMap(wansensing_TO_VOIP_MGMT)

-- uci.wansensing.HTB_Q0.
local wansensing_HTB_Q0  = {
    config = config_wansensing,
    section = "HTB_Q0",
    type = "class",
    options = { "rate", "priority", "leafqdisc" },
    list = { "trafficid" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_HTB_Q0)

-- uci.wansensing.HTB_Q1.
local wansensing_HTB_Q1  = {
    config = config_wansensing,
    section = "HTB_Q1",
    type = "class",
    options = { "rate", "priority", "leafqdisc" },
    list = { "trafficid" },
}
mapper("uci_1to1").registerSimpleMap(wansensing_HTB_Q1)

-- uci.wansensing.state.
local wansensing_state  = {
    config = config_wansensing,
    section = "state",
    type = "state",
    options = { "backupStatus", "currState", "wanSyncStatus" }
}
mapper("uci_1to1").registerSimpleMap(wansensing_state)
