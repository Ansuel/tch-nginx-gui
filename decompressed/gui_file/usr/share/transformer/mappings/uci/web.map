local uci = mapper("uci_1to1")

-- uci.web
uci.registerConfigMap("web")

-- uci.web.assistance
local assistance_map = {
  config = "web",
  type = "assistance",
  options = {
    "sessionmgr",
    "user",
    "interface",
    "interface6",
    "timeout",
    "port",
    "active",
    "passwordchars",
  }
}
uci.registerNamedMultiMap(assistance_map)

local assist_state_map = {
  config = 'web',
  type = 'assist_state',
  options = {
    'enabled',
    'port',
    'salt',
    'verifier'
  }
}
uci.registerNamedMultiMap(assist_state_map)

-- uci.web.sessionmgr
local sessionmgr_map = {
  config = "web",
  type = "sessionmgr",
  options = {
    "cookiepath",
    "authpath",
    "passpath",
    "loginpath",
    "timeout",
    "default_user",
    "ruleset",
    "public_port",
    "secure_cookie",
    "maxsessions",
    "maxsessions_per_ip",
    "bruteforce",
    "relaxfirstattempt",
    "maxwrongattempt",
    "backOffMethod",
    "backOffRepeat",
  },
  lists = { "users" }
}
uci.registerNamedMultiMap(sessionmgr_map)

-- uci.web.user
local user_map = {
  config = "web",
  type = "user",
  options = {
    -- generic options
    "name",
    "role",
    "srp_salt",
    "srp_verifier",
    "interface",
    "password_reminder",
    "language",
    "selectedMode",
  },
  passwords = { "srp_salt", "srp_verifier", "legacy_salt" },
  lists = { "allowed_ip" }
}
uci.registerNamedMultiMap(user_map)

-- uci.web.ruleset
local ruleset_map = {
  config = "web",
  type = "ruleset",
  lists = { "rules" }
}
uci.registerNamedMultiMap(ruleset_map)

-- uci.web.rule
local rule_map = {
  config = "web",
  type = "rule",
  options = { "target" },
  lists = { "roles" },
}
uci.registerNamedMultiMap(rule_map)

-- uci.web.uiconfig
local uiconfig_map = {
    config = "web",
    type = "uiconfig",
    options = {
      --generic options
      "defaultuser",
      "nsplink",
      "upgradefw",
      "alwaysadvanced",
      "expertMode_globalMsg",
      "open_sw_link",
      -- options used by some custo's
      "nsplogo",
      "dnsserver_query",
      "expert",
      "mainwifi_frequency",
      "guestwifi_frequency",
      "pageNavigationMode",
    },
    lists = { "upgradefw_role" },
}
uci.registerNamedMultiMap(uiconfig_map)

-- uci.web.card
local card_map = {
  config = "web",
  type = "card",
  options = {
      "modal",
      "card",
      "hide",
    }
}
uci.registerNamedMultiMap(card_map)

-- uci.web.log
local log_map = {
  config = "web",
  section = "log",
  type = "log",
  options = {
      "selected_logs",
      "selected_events",
    }
}
uci.registerSimpleMap(log_map)
