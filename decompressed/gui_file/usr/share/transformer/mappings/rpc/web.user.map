--NG-58110
local web_user_ = {
  objectType = {
    name = "rpc.web.user.@.",
    access = "readOnly",
    numEntriesParameter = "WebNumberOfEntries",
    minEntries = 0,
    maxEntries = math.huge,
    parameters = {
		role = {
			access = "readOnly",
			type = "string",
		},
		reset = {
			access = "readWrite",
			type = "string",
		},
    }
  }
}

local uci_helper = mapper("ucihelper")
local modgui = require("modgui")
local logger = modgui.getRightLoggerModule()
local log = logger.new("web.user", 2)
local register = register;

local function webEntries()
	local entries = {}
	local binding = {config="web", sectionname="user",}
	uci_helper.foreach_on_uci(binding, function(s)
      table.insert(entries, s['.name'])
    end)
    return entries
	
end

web_user_.get = {
	role = function(mapping, param, key)
		return uci_helper.get_from_uci({config= "web", sectionname=key, option="role"})
	end,
	reset = function(mapping, param, key)
		return "0"
	end
}

web_user_.set = {
	reset = function(mapping, param, value, key)
	if uci_helper.get_from_uci({config= "web", sectionname=key, option="role"}) == "admin" then
		if tostring(value) == "1" then
			local check = string.format("name=$(uci get web.%s.name); ackey=$(/usr/bin/get_access_key 2>&1); SRP=$(newsrpuser -f -u $name -p $ackey); echo $SRP",key)
			local handle = io.popen(check)
			local srp = handle:read("*a")
			handle:close()
			
			local srp2 = string.gsub(srp, "%s", "_")

			local handle = io.popen("SRP="..srp2.."; SALT=$(echo $SRP | cut -d_ -f1); echo $SALT")
			local salt = handle:read("*a")
			handle:close()

			local handle = io.popen("SRP="..srp2.."; VERIFIER=$(echo $SRP | cut -d_ -f2); echo $VERIFIER")
			local verifier = handle:read("*a")
			handle:close()
			
			uci_helper.set_on_uci({ config = "web", sectionname = key , option = "srp_salt"}, string.gsub(salt, "%s", ""), commitapply)
			uci_helper.set_on_uci({ config = "web", sectionname = key , option = "srp_verifier"}, string.gsub(verifier, "%s", ""), commitapply)
		end
	end
	end
}
web_user_.entries = webEntries
web_user_.commit = function()
	uci_helper.commit({config = "web"})
end
register(web_user_)