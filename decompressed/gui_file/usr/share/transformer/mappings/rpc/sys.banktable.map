local register = register
local popen = io.popen

local sys_banktable_ = {
    objectType = {
        name = "sys.banktable.",
        access = "readOnly",
        minEntries = 1,
        maxEntries = 1,
        parameters = {
            passiveversion = {
                access = "readOnly",
                type = "string",
            },
            activeversion = {
                access = "readOnly",
                type = "string",
            },
			passivebank = {
                access = "readOnly",
                type = "string",
            },
            activebank = {
                access = "readOnly",
                type = "string",
            },
        }
    }
}

local function get(mapping, paramName)
    local function getBankTableInfo(cmd)
        local fp = popen(cmd)
        if fp == nil then
            return ""
        end
        local line = fp:read("*l")
        if not line then
            return ""
        else
            fp:close()
            return line
        end
    end

    local cmd = ""
    if paramName == "passiveversion" then
        cmd = "cat /proc/banktable/passiveversion"
    elseif paramName == "activeversion" then
        cmd = "cat /proc/banktable/activeversion"
    elseif paramName == "passivebank" then
        cmd = "cat /proc/banktable/inactive"
    elseif paramName == "activebank" then
        cmd = "cat /proc/banktable/active"
    else
        return ""
    end

    return getBankTableInfo(cmd)
end

sys_banktable_.get = get
register(sys_banktable_)
