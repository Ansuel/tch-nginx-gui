local mmpbx_codecfilter_ = {
    objectType = {
    name = "rpc.mmpbx.codecfilter.@.",
    access = "readOnly",
    minEntries = 0,
    maxEntries = math.huge,
    parameters = {
        encodingName = {
            access = "readOnly",
            type = "string",
        },
        supportedBitRate = {
             access = "readOnly",
             type = "unsignedInt",
        },
    }
  }
}

local conn = mapper("ubus").connect()
local codec_rates = {
    PCMU = "64",
    PCMA = "64",
    G722 = "64",
    ["G726-16"] = "16",
    ["G726-24"] = "24",
    ["G726-32"] = "32",
    ["G726-40"] = "40",
    G729 = "8",
    G723 = "6.3",
    AMR = "12.2",
    ILBC = "15.2"
}

mmpbx_codecfilter_.entries = function()
  local entries = {}
  local result = codec_rates
  for k in pairs(result) do
    entries[#entries + 1] = k
  end
  return entries
end

mmpbx_codecfilter_.get = function(mapping, param, key)
  if param == "encodingName" then
    return key
  elseif param == "supportedBitRate" then
    return codec_rates[key] or ""
  end
  return ""
end

register(mmpbx_codecfilter_)
