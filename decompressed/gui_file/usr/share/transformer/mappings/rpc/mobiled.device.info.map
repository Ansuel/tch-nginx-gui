local mobiled_device_info_ = {
	objectType = {
		name = 'rpc.mobiled.device.@.info.',
		access = 'readOnly',
		minEntries = 1,
		maxEntries = 1,
		parameters = {
			manufacturer = {
			  access = "readOnly",
			  type = "string"
			},
			model = {
			  access = "readOnly",
			  type = "string"
			},
			software_version = {
				access = "readOnly",
				type = "string"
			},
			hardware_version = {
				access = "readOnly",
				type = "string"
			},
			imei = {
				access = "readOnly",
				type = "string"
			},
			imeisv = {
				access = "readOnly",
				type = "string"
			},
			imei_svn = {
				access = "readOnly",
				type = "string"
			},
			device_config_parameter = {
				access = "readOnly",
				type = "string"
			},
			serial = {
				access = "readOnly",
				type = "string"
			},
			power_mode = {
				access = "readOnly",
				type = "string"
			},
			temperature = {
				 access = "readOnly",
				 type = "int"
			},
			pid = {
				access = "readOnly",
				type = "string"
			},
			vid = {
				access = "readOnly",
				type = "string"
			},
			initialized = {
				access = "readOnly",
				type = "boolean"
			},
			login_required = {
				access = "readOnly",
				type = "boolean"
			}
		}
	}
}

local conn = mapper("ubus").connect()
if not conn then
	return
end

local helper = require("mobiled.scripthelpers")

local function getall(mapping, key)
	local data = helper.getUbusData(conn, "mobiled.device", "get", { dev_idx = tonumber(string.match(key, '%d')) })
	if data.imei ~= "" and data.imei_svn ~= "" then
		data.imeisv = string.sub(data.imei, 1, 14) .. data.imei_svn
	end
	return data
end

local function get(mapping, paramName, key)
	return getall(mapping, key)[paramName]
end

mobiled_device_info_.getall = getall
mobiled_device_info_.get = get

register(mobiled_device_info_)
