local obj = {
	objectType = {
		name = 'rpc.mobiled.device.@.radio.signal_quality.',
		access = 'readOnly',
		minEntries = 1,
		maxEntries = 1,
		parameters = {
			rsrq = {
				access = "readOnly",
				type = "string"
			},
			rssi = {
				access = "readOnly",
				type = "string"
			},
			rsrp = {
				 access = "readOnly",
				 type = "string"
			},
			rscp = {
				 access = "readOnly",
				 type = "string"
			},
			snr = {
				 access = "readOnly",
				 type = "string"
			},
			sinr = {
				 access = "readOnly",
				 type = "string"
			},
			cinr = {
				 access = "readOnly",
				 type = "string"
			},
			path_loss = {
				 access = "readOnly",
				 type = "string"
			},
			ecio = {
				 access = "readOnly",
				 type = "string"
			},
			phy_cell_id = {
				 access = "readOnly",
				 type = "string"
			},
			dl_arfcn = {
				access = "readOnly",
				type = "string"
			},
			dl_uarfcn = {
				access = "readOnly",
				type = "string"
			},
			dl_earfcn = {
				access = "readOnly",
				type = "string"
			},
			ul_arfcn = {
				access = "readOnly",
				type = "string"
			},
			ul_uarfcn = {
				access = "readOnly",
				type = "string"
			},
			ul_earfcn = {
				access = "readOnly",
				type = "string"
			},
			lte_ul_freq = {
				access = "readOnly",
				type = "string"
			},
			lte_dl_freq = {
				access = "readOnly",
				type = "string"
			},
			lte_dl_bandwidth = {
				access = "readOnly",
				type = "string"
			},
			lte_ul_bandwidth = {
				access = "readOnly",
				type = "string"
			},
			lte_band = {
				access = "readOnly",
				type = "string"
			},
			tx_power = {
				access = "readOnly",
				type = "string"
			},
			bler_main = {
				access = "readOnly",
				type = "string"
			},
			bler_div = {
				access = "readOnly",
				type = "string"
			},
			bler_total = {
				access = "readOnly",
				type = "string"
			},
			radio_interface = {
				access = "readOnly",
				type = "string"
			},
			rrc_state = {
				access = "readOnly",
				type = "string",
				enumeration = {
					"idle",
					"connected"
				}
			},
			ri = {
				access = "readOnly",
				type = "unsignedInt"
			},
			cqi = {
				access = "readOnly",
				type = "unsignedInt"
			},
			radio_bearer_type = {
				access = "readOnly",
				type = "string"
			},
			max_age = {
				access = "readWrite",
				type = "unsignedInt"
			}
		}
	}
}

local conn = mapper("ubus").connect()
local helper = require("mobiled.scripthelpers")
local mobiled_mapping_helper = require("transformer.shared.mobiled_helper")

function obj.getall(_, key)
	local dev_idx = tonumber(string.match(key, '%d+'))
	local max_age = mobiled_mapping_helper.getDataMaxAge(dev_idx)
	local data = helper.getUbusData(conn, "mobiled.radio", "signal_quality", { dev_idx = dev_idx, max_age = max_age })
	data.max_age = tostring(max_age or "")
	return data
end

function obj.get(mapping, paramName, key)
	return obj.getall(mapping, key)[paramName]
end

function obj.set(_, paramName, paramVal, key)
	if paramName == "max_age" then
		mobiled_mapping_helper.setDataMaxAge(tonumber(string.match(key, '%d+')), tonumber(paramVal))
	end
end

register(obj)
