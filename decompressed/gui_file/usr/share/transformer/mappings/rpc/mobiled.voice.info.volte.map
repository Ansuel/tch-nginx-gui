local mobiled_voice_info_volte_ = {
    objectType = {
        name = 'rpc.mobiled.device.@.voice.info.volte.',
        access = 'readOnly',
        minEntries = 1,
        maxEntries = 1,
        parameters = {
            registration_status = {
                access = "readOnly",
                type = "string"
            }
        }
    }
}

local conn = mapper("ubus").connect()
if not conn then
    return
end

local helper = require("mobiled.scripthelpers")

local function getall(mapping, key)
    local result = {}
    setmetatable(result, { __index = function() return "" end })
    local data = helper.getUbusData(conn, "mobiled.voice", "info", { dev_idx = tonumber(string.match(key, '%d+')) })
    if type(data.volte) == "table" then
        for k, v in pairs(data.volte) do result[k] = v end
    end
    return result
end

local function get(mapping, paramName, key)
    return getall(mapping, key)[paramName]
end

mobiled_voice_info_volte_.getall = getall
mobiled_voice_info_volte_.get = get

register(mobiled_voice_info_volte_)
