#!/bin/sh

SKIP_SIGNATURE=0
REBOOT_OPTION=""
GUI_OPTION=

# parse options
while [ -n "$1" ]; do
        case "$1" in
                -S|--skip-signature) SKIP_SIGNATURE=1;;
                -o) REBOOT_OPTION="-o";;
                --gui) GUI_OPTION=--gui;;
				--reset) RESET_CONFIG="-n";;
				--rootonly) ROOT_ONLY=--rootonly;;
                -*)
                        echo "Invalid option: $1"
                        exit 1
                ;;
                *) break;;
        esac
        shift;
done

UPGRADE_URL="$1"

if [ -z $UPGRADE_URL ]; then
	echo "Wrapper around sysupgrade, making it more robust for firmware upgrades."
	echo ""
	echo "Usage: $0 {options} <url>"
	echo " Options:"
	echo "  [-S|--skip-signature] Disables signature checking"
	echo "  [-o] Only program inactive bank, do not activate, no reboot"
	echo "  [--gui] signal an upgrade form the web UI. This will prevent nginx form being killed."
	echo "  [--reset] Reset config file on upgrade."
	echo "  [--rootonly] Root only the modem and don't reinstall custom gui."
	exit 1
fi

SIGNATURE_OPTION=
if [ $SKIP_SIGNATURE -eq 1 ]; then
	SIGNATURE_OPTION=--nosig
fi

sysupgrade --safe ${REBOOT_OPTION} ${GUI_OPTION} ${SIGNATURE_OPTION} ${RESET_CONFIG} "${UPGRADE_URL}"

if [ $? -ne 0 ]                          
then                           
        if [ -f /tmp/getimageerr ];              
        then                   
                rm -rf /tmp/getimageerr
                exit 1    
        fi     
        exit 2 
fi             
